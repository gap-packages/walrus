<Chapter Label="Pregroups">
  <Heading>
    Pregroups
  </Heading>

  Pregroups are the fundamental building block of pregroup presentations used in the hyperbolicity tester.
  The following section describes how to create pregroups from multiplication tables, free groups, and free products of finite groups.

  <Section>
    <Heading>Creating pregroups</Heading>

    <ManSection>
      <Func Name="PregroupByMultiplicationTable" Arg="enams, table"/>
      <Func Name="PregroupByMultiplicationTableNC" Arg="enams, table"/>
      <Returns>
        A pregroup in multiplication table representation.
      </Returns>
      <Description>
        If <A>enams</A> is a list of element names, which can be arbitrary GAP objects,
        with the convention that <C>enams[1]</C> is the name of the identity element, and
        <A>table</A> is a square table of non-negative integers that is the multiplication
        table of a pregroup, then <Ref Func="PregroupByMultiplicationTable"/> and
        <Ref Func="PregroupByMultiplicationTableNC"/> return a pregroup in multiplication
        table representation.
        <P/>
        By convention the elements of the pregroup are numbered <C>[1..n]</C> with
        <C>0</C> denoting an undefined product in the table.
        <P/>
        The axioms for a pregroup are checked by <Ref Func="PregroupByMultiplicationTable"/> and
        not checked by <Ref Func="PregroupByMultiplicationTableNC"/>.
        <Example><![CDATA[
gap> pregroup := PregroupByMultiplicationTable( "1xyY",
>                                               [ [1,2,3,4]
>                                               , [2,1,0,0]
>                                               , [3,4,0,1]
>                                               , [4,0,1,3] ] );
<pregroup with 4 elements in table rep>
]]></Example>
      </Description> 
    </ManSection>

    <ManSection>
      <Func Name="PregroupOfFreeGroup" Arg="rank"/>
      <Returns>
        A pregroup of a free group of rank <A>rank</A>.
      </Returns>
      <Description>
        Returns a pregroup of a free group of finite rank <A>rank</A>. Pregroups
        of free groups are not stored in multiplication table representation for
        efficiency reasons.
        <Example><![CDATA[
gap> pregroup := PregroupOfFreeGroup(4);
<pregroup of free group of rank 4>
]]></Example>
      </Description>
    </ManSection>

    <ManSection>
      <Oper Name="PregroupFromFreeProduct" Arg="G, H"/>
      <Returns>
        A pregroup in multiplication table representation.
      </Returns>
      <Description>
      If <A>G</A> and <A>H</A> are finite groups, then <Ref Func="PregroupFromFreeProduct"/> returns
      the pregroup consisting of the non-identity elements of <A>G</A> and <A>H</A> and an identity
      element. A product between two non-trivial elements is defined if and only if they are in the same
      group.
      <Example><![CDATA[
gap> pregroup := PregroupOfFreeProduct(SmallGroup(12,2), SmallGroup(24,4));
<pregroup with 35 elements in table rep>
]]></Example>
      </Description>
    </ManSection>

  </Section>


  <Section>
    <Heading>Creating pregroup presentations</Heading>

    <ManSection>
      <Func Name="RandomPregroupPresentation" Arg="pregroup, nrel, lrel"/>
      <Returns>
        A pregroup presentation.
      </Returns>
      <Description>
        Generates a random pregroup presentation over the pregroup <A>pregroup</A> with
        <A>nrel</A> cyclically cancelled relators all of length <A>lrel</A>.
        <Example><![CDATA[
gap> pg := PregroupOfFreeProduct(CyclicGroup(2), CyclicGroup(3));
<pregroup with 4 elements in table rep>
gap> pr := RandomPregroupPresentation(pg, 5, 20);
<pregroup presentation with 3 generators and 5 relators>
]]></Example>
      </Description>
    </ManSection>

    <ManSection>
      <Func Name="TriangleGroup" Arg="k,l,m"/>
      <Returns>
        A pregroup presentation.
      </Returns>
      <Description>
      <Ref Func="TriangleGroup"/> returns a pregroup presentation of
      the <M>(k,l,m)</M>-triangle group over the pregroup
      <C>PregroupOfFreeProduct(CyclicGroup(k), CyclicGroup(l))</C>.
      </Description>
    </ManSection>

    <ManSection>
      <Func Name="TriSH" Arg="m,n"/>
      <Returns>
        A pregroup presentation.
      </Returns>
      <Description>
        Returns a pregroup presentation of the quotient of the <M>(2,3,m)</M> triangle group
        by the <A>m</A>-th power of the commutator of the generators of the two cyclic groups.
      </Description>
    </ManSection>
  </Section>

  <Section>
    <Heading>Running the RSym tester</Heading>
    <ManSection>
      <Func Name="RSymTest" Arg="presentation, epsilon"/>
      <Description>
        Runs the <C>RSym</C> tester on the presentation <A>pr</A> with an
        epsilon value of <A>epsilon</A>.
        <Example><![CDATA[
gap> tri_2_3_7 := TriangleGroup(2,3,7);
<pregroup presentation with 3 generators and 1 relator>
gap> RSymTest(tri_2_3_7, 1/6);
true
        ]]></Example>
      </Description>
    </ManSection>
  </Section>

</Chapter>
